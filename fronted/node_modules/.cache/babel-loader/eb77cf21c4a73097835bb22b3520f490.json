{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Splitting = factory();\n})(this, function () {\n  'use strict';\n\n  var root = document;\n  var createText = root.createTextNode.bind(root);\n  /**\n   * # setProperty\n   * Apply a CSS var\n   * @param el{HTMLElement} \n   * @param varName {string} \n   * @param value {string|number}  \n   */\n\n  function setProperty(el, varName, value) {\n    el.style.setProperty(varName, value);\n  }\n  /**\n   * \n   * @param {Node} el \n   * @param {Node} child \n   */\n\n\n  function appendChild(el, child) {\n    return el.appendChild(child);\n  }\n\n  function createElement(parent, key, text, whitespace) {\n    var el = root.createElement('span');\n    key && (el.className = key);\n\n    if (text) {\n      !whitespace && el.setAttribute(\"data-\" + key, text);\n      el.textContent = text;\n    }\n\n    return parent && appendChild(parent, el) || el;\n  }\n\n  function getData(el, key) {\n    return el.getAttribute(\"data-\" + key);\n  }\n  /**\n   * \n   * @param e {import('../types').Target} \n   * @param parent {HTMLElement}\n   * @returns {HTMLElement[]}\n   */\n\n\n  function $(e, parent) {\n    return !e || e.length == 0 ? // null or empty string returns empty array\n    [] : e.nodeName ? // a single element is wrapped in an array\n    [e] : // selector and NodeList are converted to Element[]\n    [].slice.call(e[0].nodeName ? e : (parent || root).querySelectorAll(e));\n  }\n  /**\n   * Creates and fills an array with the value provided\n   * @template {T}\n   * @param {number} len\n   * @param {() => T} valueProvider\n   * @return {T}\n   */\n\n\n  function Array2D(len) {\n    var a = [];\n\n    for (; len--;) {\n      a[len] = [];\n    }\n\n    return a;\n  }\n\n  function each(items, fn) {\n    items && items.some(fn);\n  }\n\n  function selectFrom(obj) {\n    return function (key) {\n      return obj[key];\n    };\n  }\n  /**\n   * # Splitting.index\n   * Index split elements and add them to a Splitting instance.\n   *\n   * @param element {HTMLElement}\n   * @param key {string}\n   * @param items {HTMLElement[] | HTMLElement[][]}\n   */\n\n\n  function index(element, key, items) {\n    var prefix = '--' + key;\n    var cssVar = prefix + \"-index\";\n    each(items, function (items, i) {\n      if (Array.isArray(items)) {\n        each(items, function (item) {\n          setProperty(item, cssVar, i);\n        });\n      } else {\n        setProperty(items, cssVar, i);\n      }\n    });\n    setProperty(element, prefix + \"-total\", items.length);\n  }\n  /**\n   * @type {Record<string, import('./types').ISplittingPlugin>}\n   */\n\n\n  var plugins = {};\n  /**\n   * @param by {string}\n   * @param parent {string}\n   * @param deps {string[]}\n   * @return {string[]}\n   */\n\n  function resolvePlugins(by, parent, deps) {\n    // skip if already visited this dependency\n    var index = deps.indexOf(by);\n\n    if (index == -1) {\n      // if new to dependency array, add to the beginning\n      deps.unshift(by); // recursively call this function for all dependencies\n\n      each(plugins[by].depends, function (p) {\n        resolvePlugins(p, by, deps);\n      });\n    } else {\n      // if this dependency was added already move to the left of\n      // the parent dependency so it gets loaded in order\n      var indexOfParent = deps.indexOf(parent);\n      deps.splice(index, 1);\n      deps.splice(indexOfParent, 0, by);\n    }\n\n    return deps;\n  }\n  /**\n   * Internal utility for creating plugins... essentially to reduce\n   * the size of the library\n   * @param {string} by \n   * @param {string} key \n   * @param {string[]} depends \n   * @param {Function} split \n   * @returns {import('./types').ISplittingPlugin}\n   */\n\n\n  function createPlugin(by, depends, key, split) {\n    return {\n      by: by,\n      depends: depends,\n      key: key,\n      split: split\n    };\n  }\n  /**\n   *\n   * @param by {string}\n   * @returns {import('./types').ISplittingPlugin[]}\n   */\n\n\n  function resolve(by) {\n    return resolvePlugins(by, 0, []).map(selectFrom(plugins));\n  }\n  /**\n   * Adds a new plugin to splitting\n   * @param opts {import('./types').ISplittingPlugin}\n   */\n\n\n  function add(opts) {\n    plugins[opts.by] = opts;\n  }\n  /**\n   * # Splitting.split\n   * Split an element's textContent into individual elements\n   * @param el {Node} Element to split\n   * @param key {string}\n   * @param splitOn {string}\n   * @param includeSpace {boolean}\n   * @returns {HTMLElement[]}\n   */\n\n\n  function splitText(el, key, splitOn, includePrevious, preserveWhitespace) {\n    // Combine any strange text nodes or empty whitespace.\n    el.normalize(); // Use fragment to prevent unnecessary DOM thrashing.\n\n    var elements = [];\n    var F = document.createDocumentFragment();\n\n    if (includePrevious) {\n      elements.push(el.previousSibling);\n    }\n\n    var allElements = [];\n    $(el.childNodes).some(function (next) {\n      if (next.tagName && !next.hasChildNodes()) {\n        // keep elements without child nodes (no text and no children)\n        allElements.push(next);\n        return;\n      } // Recursively run through child nodes\n\n\n      if (next.childNodes && next.childNodes.length) {\n        allElements.push(next);\n        elements.push.apply(elements, splitText(next, key, splitOn, includePrevious, preserveWhitespace));\n        return;\n      } // Get the text to split, trimming out the whitespace\n\n      /** @type {string} */\n\n\n      var wholeText = next.wholeText || '';\n      var contents = wholeText.trim(); // If there's no text left after trimming whitespace, continue the loop\n\n      if (contents.length) {\n        // insert leading space if there was one\n        if (wholeText[0] === ' ') {\n          allElements.push(createText(' '));\n        } // Concatenate the split text children back into the full array\n\n\n        each(contents.split(splitOn), function (splitText, i) {\n          if (i && preserveWhitespace) {\n            allElements.push(createElement(F, \"whitespace\", \" \", preserveWhitespace));\n          }\n\n          var splitEl = createElement(F, key, splitText);\n          elements.push(splitEl);\n          allElements.push(splitEl);\n        }); // insert trailing space if there was one\n\n        if (wholeText[wholeText.length - 1] === ' ') {\n          allElements.push(createText(' '));\n        }\n      }\n    });\n    each(allElements, function (el) {\n      appendChild(F, el);\n    }); // Clear out the existing element\n\n    el.innerHTML = \"\";\n    appendChild(el, F);\n    return elements;\n  }\n  /** an empty value */\n\n\n  var _ = 0;\n\n  function copy(dest, src) {\n    for (var k in src) {\n      dest[k] = src[k];\n    }\n\n    return dest;\n  }\n\n  var WORDS = 'words';\n  var wordPlugin = createPlugin(\n  /*by: */\n  WORDS,\n  /*depends: */\n  _,\n  /*key: */\n  'word',\n  /*split: */\n  function (el) {\n    return splitText(el, 'word', /\\s+/, 0, 1);\n  });\n  var CHARS = \"chars\";\n  var charPlugin = createPlugin(\n  /*by: */\n  CHARS,\n  /*depends: */\n  [WORDS],\n  /*key: */\n  \"char\",\n  /*split: */\n  function (el, options, ctx) {\n    var results = [];\n    each(ctx[WORDS], function (word, i) {\n      results.push.apply(results, splitText(word, \"char\", \"\", options.whitespace && i));\n    });\n    return results;\n  });\n  /**\n   * # Splitting\n   * \n   * @param opts {import('./types').ISplittingOptions} \n   */\n\n  function Splitting(opts) {\n    opts = opts || {};\n    var key = opts.key;\n    return $(opts.target || '[data-splitting]').map(function (el) {\n      var ctx = el['üçå'];\n\n      if (!opts.force && ctx) {\n        return ctx;\n      }\n\n      ctx = el['üçå'] = {\n        el: el\n      };\n      var items = resolve(opts.by || getData(el, 'splitting') || CHARS);\n      var opts2 = copy({}, opts);\n      each(items, function (plugin) {\n        if (plugin.split) {\n          var pluginBy = plugin.by;\n          var key2 = (key ? '-' + key : '') + plugin.key;\n          var results = plugin.split(el, opts2, ctx);\n          key2 && index(el, key2, results);\n          ctx[pluginBy] = results;\n          el.classList.add(pluginBy);\n        }\n      });\n      el.classList.add('splitting');\n      return ctx;\n    });\n  }\n  /**\n   * # Splitting.html\n   * \n   * @param opts {import('./types').ISplittingOptions}\n   */\n\n\n  function html(opts) {\n    opts = opts || {};\n    var parent = opts.target = createElement();\n    parent.innerHTML = opts.content;\n    Splitting(opts);\n    return parent.outerHTML;\n  }\n\n  Splitting.html = html;\n  Splitting.add = add;\n\n  function detectGrid(el, options, side) {\n    var items = $(options.matching || el.children, el);\n    var c = {};\n    each(items, function (w) {\n      var val = Math.round(w[side]);\n      (c[val] || (c[val] = [])).push(w);\n    });\n    return Object.keys(c).map(Number).sort(byNumber).map(selectFrom(c));\n  }\n\n  function byNumber(a, b) {\n    return a - b;\n  }\n\n  var linePlugin = createPlugin(\n  /*by: */\n  'lines',\n  /*depends: */\n  [WORDS],\n  /*key: */\n  'line',\n  /*split: */\n  function (el, options, ctx) {\n    return detectGrid(el, {\n      matching: ctx[WORDS]\n    }, 'offsetTop');\n  });\n  var itemPlugin = createPlugin(\n  /*by: */\n  'items',\n  /*depends: */\n  _,\n  /*key: */\n  'item',\n  /*split: */\n  function (el, options) {\n    return $(options.matching || el.children, el);\n  });\n  var rowPlugin = createPlugin(\n  /*by: */\n  'rows',\n  /*depends: */\n  _,\n  /*key: */\n  'row',\n  /*split: */\n  function (el, options) {\n    return detectGrid(el, options, \"offsetTop\");\n  });\n  var columnPlugin = createPlugin(\n  /*by: */\n  'cols',\n  /*depends: */\n  _,\n  /*key: */\n  \"col\",\n  /*split: */\n  function (el, options) {\n    return detectGrid(el, options, \"offsetLeft\");\n  });\n  var gridPlugin = createPlugin(\n  /*by: */\n  'grid',\n  /*depends: */\n  ['rows', 'cols']);\n  var LAYOUT = \"layout\";\n  var layoutPlugin = createPlugin(\n  /*by: */\n  LAYOUT,\n  /*depends: */\n  _,\n  /*key: */\n  _,\n  /*split: */\n  function (el, opts) {\n    // detect and set options\n    var rows = opts.rows = +(opts.rows || getData(el, 'rows') || 1);\n    var columns = opts.columns = +(opts.columns || getData(el, 'columns') || 1); // Seek out the first <img> if the value is true \n\n    opts.image = opts.image || getData(el, 'image') || el.currentSrc || el.src;\n\n    if (opts.image) {\n      var img = $(\"img\", el)[0];\n      opts.image = img && (img.currentSrc || img.src);\n    } // add optional image to background\n\n\n    if (opts.image) {\n      setProperty(el, \"background-image\", \"url(\" + opts.image + \")\");\n    }\n\n    var totalCells = rows * columns;\n    var elements = [];\n    var container = createElement(_, \"cell-grid\");\n\n    while (totalCells--) {\n      // Create a span\n      var cell = createElement(container, \"cell\");\n      createElement(cell, \"cell-inner\");\n      elements.push(cell);\n    } // Append elements back into the parent\n\n\n    appendChild(el, container);\n    return elements;\n  });\n  var cellRowPlugin = createPlugin(\n  /*by: */\n  \"cellRows\",\n  /*depends: */\n  [LAYOUT],\n  /*key: */\n  \"row\",\n  /*split: */\n  function (el, opts, ctx) {\n    var rowCount = opts.rows;\n    var result = Array2D(rowCount);\n    each(ctx[LAYOUT], function (cell, i, src) {\n      result[Math.floor(i / (src.length / rowCount))].push(cell);\n    });\n    return result;\n  });\n  var cellColumnPlugin = createPlugin(\n  /*by: */\n  \"cellColumns\",\n  /*depends: */\n  [LAYOUT],\n  /*key: */\n  \"col\",\n  /*split: */\n  function (el, opts, ctx) {\n    var columnCount = opts.columns;\n    var result = Array2D(columnCount);\n    each(ctx[LAYOUT], function (cell, i) {\n      result[i % columnCount].push(cell);\n    });\n    return result;\n  });\n  var cellPlugin = createPlugin(\n  /*by: */\n  \"cells\",\n  /*depends: */\n  ['cellRows', 'cellColumns'],\n  /*key: */\n  \"cell\",\n  /*split: */\n  function (el, opt, ctx) {\n    // re-index the layout as the cells\n    return ctx[LAYOUT];\n  }); // install plugins\n  // word/char plugins\n\n  add(wordPlugin);\n  add(charPlugin);\n  add(linePlugin); // grid plugins\n\n  add(itemPlugin);\n  add(rowPlugin);\n  add(columnPlugin);\n  add(gridPlugin); // cell-layout plugins\n\n  add(layoutPlugin);\n  add(cellRowPlugin);\n  add(cellColumnPlugin);\n  add(cellPlugin);\n  return Splitting;\n});","map":{"version":3,"sources":["/Users/patricio/Desktop/spbox-proyecto/fronted/node_modules/splitting/dist/splitting.js"],"names":["global","factory","exports","module","define","amd","Splitting","root","document","createText","createTextNode","bind","setProperty","el","varName","value","style","appendChild","child","createElement","parent","key","text","whitespace","className","setAttribute","textContent","getData","getAttribute","$","e","length","nodeName","slice","call","querySelectorAll","Array2D","len","a","each","items","fn","some","selectFrom","obj","index","element","prefix","cssVar","i","Array","isArray","item","plugins","resolvePlugins","by","deps","indexOf","unshift","depends","p","indexOfParent","splice","createPlugin","split","resolve","map","add","opts","splitText","splitOn","includePrevious","preserveWhitespace","normalize","elements","F","createDocumentFragment","push","previousSibling","allElements","childNodes","next","tagName","hasChildNodes","apply","wholeText","contents","trim","splitEl","innerHTML","_","copy","dest","src","k","WORDS","wordPlugin","CHARS","charPlugin","options","ctx","results","word","target","force","opts2","plugin","pluginBy","key2","classList","html","content","outerHTML","detectGrid","side","matching","children","c","w","val","Math","round","Object","keys","Number","sort","byNumber","b","linePlugin","itemPlugin","rowPlugin","columnPlugin","gridPlugin","LAYOUT","layoutPlugin","rows","columns","image","currentSrc","img","totalCells","container","cell","cellRowPlugin","rowCount","result","floor","cellColumnPlugin","columnCount","cellPlugin","opt"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Splitting = factory());\n}(this, (function () { 'use strict';\n\nvar root = document;\nvar createText = root.createTextNode.bind(root);\n\n/**\n * # setProperty\n * Apply a CSS var\n * @param el{HTMLElement} \n * @param varName {string} \n * @param value {string|number}  \n */\nfunction setProperty(el, varName, value) {\n    el.style.setProperty(varName, value);\n} \n\n/**\n * \n * @param {Node} el \n * @param {Node} child \n */\nfunction appendChild(el, child) {\n  return el.appendChild(child);\n}\n\nfunction createElement(parent, key, text, whitespace) {\n  var el = root.createElement('span');\n  key && (el.className = key); \n  if (text) { \n      !whitespace && el.setAttribute(\"data-\" + key, text);\n      el.textContent = text; \n  }\n  return (parent && appendChild(parent, el)) || el;\n}\n\nfunction getData(el, key) {\n  return el.getAttribute(\"data-\" + key)\n}\n\n/**\n * \n * @param e {import('../types').Target} \n * @param parent {HTMLElement}\n * @returns {HTMLElement[]}\n */\nfunction $(e, parent) {\n    return !e || e.length == 0\n        ? // null or empty string returns empty array\n          []\n        : e.nodeName\n            ? // a single element is wrapped in an array\n              [e]\n            : // selector and NodeList are converted to Element[]\n              [].slice.call(e[0].nodeName ? e : (parent || root).querySelectorAll(e));\n}\n\n/**\n * Creates and fills an array with the value provided\n * @template {T}\n * @param {number} len\n * @param {() => T} valueProvider\n * @return {T}\n */\nfunction Array2D(len) {\n    var a = [];\n    for (; len--; ) {\n        a[len] = [];\n    }\n    return a;\n}\n\nfunction each(items, fn) {\n    items && items.some(fn);\n}\n\nfunction selectFrom(obj) {\n    return function (key) {\n        return obj[key];\n    }\n}\n\n/**\n * # Splitting.index\n * Index split elements and add them to a Splitting instance.\n *\n * @param element {HTMLElement}\n * @param key {string}\n * @param items {HTMLElement[] | HTMLElement[][]}\n */\nfunction index(element, key, items) {\n    var prefix = '--' + key;\n    var cssVar = prefix + \"-index\";\n\n    each(items, function (items, i) {\n        if (Array.isArray(items)) {\n            each(items, function(item) {\n                setProperty(item, cssVar, i);\n            });\n        } else {\n            setProperty(items, cssVar, i);\n        }\n    });\n\n    setProperty(element, prefix + \"-total\", items.length);\n}\n\n/**\n * @type {Record<string, import('./types').ISplittingPlugin>}\n */\nvar plugins = {};\n\n/**\n * @param by {string}\n * @param parent {string}\n * @param deps {string[]}\n * @return {string[]}\n */\nfunction resolvePlugins(by, parent, deps) {\n    // skip if already visited this dependency\n    var index = deps.indexOf(by);\n    if (index == -1) {\n        // if new to dependency array, add to the beginning\n        deps.unshift(by);\n\n        // recursively call this function for all dependencies\n        each(plugins[by].depends, function(p) {\n            resolvePlugins(p, by, deps);\n        });\n    } else {\n        // if this dependency was added already move to the left of\n        // the parent dependency so it gets loaded in order\n        var indexOfParent = deps.indexOf(parent);\n        deps.splice(index, 1);\n        deps.splice(indexOfParent, 0, by);\n    }\n    return deps;\n}\n\n/**\n * Internal utility for creating plugins... essentially to reduce\n * the size of the library\n * @param {string} by \n * @param {string} key \n * @param {string[]} depends \n * @param {Function} split \n * @returns {import('./types').ISplittingPlugin}\n */\nfunction createPlugin(by, depends, key, split) {\n    return {\n        by: by,\n        depends: depends,\n        key: key,\n        split: split\n    }\n}\n\n/**\n *\n * @param by {string}\n * @returns {import('./types').ISplittingPlugin[]}\n */\nfunction resolve(by) {\n    return resolvePlugins(by, 0, []).map(selectFrom(plugins));\n}\n\n/**\n * Adds a new plugin to splitting\n * @param opts {import('./types').ISplittingPlugin}\n */\nfunction add(opts) {\n    plugins[opts.by] = opts;\n}\n\n/**\n * # Splitting.split\n * Split an element's textContent into individual elements\n * @param el {Node} Element to split\n * @param key {string}\n * @param splitOn {string}\n * @param includeSpace {boolean}\n * @returns {HTMLElement[]}\n */\nfunction splitText(el, key, splitOn, includePrevious, preserveWhitespace) {\n    // Combine any strange text nodes or empty whitespace.\n    el.normalize();\n\n    // Use fragment to prevent unnecessary DOM thrashing.\n    var elements = [];\n    var F = document.createDocumentFragment();\n\n    if (includePrevious) {\n        elements.push(el.previousSibling);\n    }\n\n    var allElements = [];\n    $(el.childNodes).some(function(next) {\n        if (next.tagName && !next.hasChildNodes()) {\n            // keep elements without child nodes (no text and no children)\n            allElements.push(next);\n            return;\n        }\n        // Recursively run through child nodes\n        if (next.childNodes && next.childNodes.length) {\n            allElements.push(next);\n            elements.push.apply(elements, splitText(next, key, splitOn, includePrevious, preserveWhitespace));\n            return;\n        }\n\n        // Get the text to split, trimming out the whitespace\n        /** @type {string} */\n        var wholeText = next.wholeText || '';\n        var contents = wholeText.trim();\n\n        // If there's no text left after trimming whitespace, continue the loop\n        if (contents.length) {\n            // insert leading space if there was one\n            if (wholeText[0] === ' ') {\n                allElements.push(createText(' '));\n            }\n            // Concatenate the split text children back into the full array\n            each(contents.split(splitOn), function(splitText, i) {\n                if (i && preserveWhitespace) {\n                    allElements.push(createElement(F, \"whitespace\", \" \", preserveWhitespace));\n                }\n                var splitEl = createElement(F, key, splitText);\n                elements.push(splitEl);\n                allElements.push(splitEl);\n            }); \n            // insert trailing space if there was one\n            if (wholeText[wholeText.length - 1] === ' ') {\n                allElements.push(createText(' '));\n            }\n        }\n    });\n\n    each(allElements, function(el) {\n        appendChild(F, el);\n    });\n\n    // Clear out the existing element\n    el.innerHTML = \"\";\n    appendChild(el, F);\n    return elements;\n}\n\n/** an empty value */\nvar _ = 0;\n\nfunction copy(dest, src) {\n    for (var k in src) {\n        dest[k] = src[k];\n    }\n    return dest;\n}\n\nvar WORDS = 'words';\n\nvar wordPlugin = createPlugin(\n    /*by: */ WORDS,\n    /*depends: */ _,\n    /*key: */ 'word', \n    /*split: */ function(el) {\n        return splitText(el, 'word', /\\s+/, 0, 1)\n    }\n);\n\nvar CHARS = \"chars\";\n\nvar charPlugin = createPlugin(\n    /*by: */ CHARS,\n    /*depends: */ [WORDS],\n    /*key: */ \"char\", \n    /*split: */ function(el, options, ctx) {\n        var results = [];\n\n        each(ctx[WORDS], function(word, i) {\n            results.push.apply(results, splitText(word, \"char\", \"\", options.whitespace && i));\n        });\n\n        return results;\n    }\n);\n\n/**\n * # Splitting\n * \n * @param opts {import('./types').ISplittingOptions} \n */\nfunction Splitting (opts) {\n  opts = opts || {};\n  var key = opts.key;\n\n  return $(opts.target || '[data-splitting]').map(function(el) {\n    var ctx = el['üçå'];  \n    if (!opts.force && ctx) {\n      return ctx;\n    }\n\n    ctx = el['üçå'] = { el: el };\n    var items = resolve(opts.by || getData(el, 'splitting') || CHARS);\n    var opts2 = copy({}, opts);\n    each(items, function(plugin) {\n      if (plugin.split) {\n        var pluginBy = plugin.by;\n        var key2 = (key ? '-' + key : '') + plugin.key;\n        var results = plugin.split(el, opts2, ctx);\n        key2 && index(el, key2, results);\n        ctx[pluginBy] = results;\n        el.classList.add(pluginBy);\n      } \n    });\n\n    el.classList.add('splitting');\n    return ctx;\n  })\n}\n\n/**\n * # Splitting.html\n * \n * @param opts {import('./types').ISplittingOptions}\n */\nfunction html(opts) {\n  opts = opts || {};\n  var parent = opts.target =  createElement();\n  parent.innerHTML = opts.content;\n  Splitting(opts);\n  return parent.outerHTML\n}\n\nSplitting.html = html;\nSplitting.add = add;\n\nfunction detectGrid(el, options, side) {\n    var items = $(options.matching || el.children, el);\n    var c = {};\n\n    each(items, function(w) {\n        var val = Math.round(w[side]);\n        (c[val] || (c[val] = [])).push(w);\n    });\n\n    return Object.keys(c).map(Number).sort(byNumber).map(selectFrom(c));\n}\n\nfunction byNumber(a, b) {\n    return a - b;\n}\n\nvar linePlugin = createPlugin(\n    /*by: */ 'lines',\n    /*depends: */ [WORDS],\n    /*key: */ 'line',\n    /*split: */ function(el, options, ctx) {\n      return detectGrid(el, { matching: ctx[WORDS] }, 'offsetTop')\n    }\n);\n\nvar itemPlugin = createPlugin(\n    /*by: */ 'items',\n    /*depends: */ _,\n    /*key: */ 'item', \n    /*split: */ function(el, options) {\n        return $(options.matching || el.children, el)\n    }\n);\n\nvar rowPlugin = createPlugin(\n    /*by: */ 'rows',\n    /*depends: */ _,\n    /*key: */ 'row', \n    /*split: */ function(el, options) {\n        return detectGrid(el, options, \"offsetTop\");\n    }\n);\n\nvar columnPlugin = createPlugin(\n    /*by: */ 'cols',\n    /*depends: */ _,\n    /*key: */ \"col\", \n    /*split: */ function(el, options) {\n        return detectGrid(el, options, \"offsetLeft\");\n    }\n);\n\nvar gridPlugin = createPlugin(\n    /*by: */ 'grid',\n    /*depends: */ ['rows', 'cols']\n);\n\nvar LAYOUT = \"layout\";\n\nvar layoutPlugin = createPlugin(\n    /*by: */ LAYOUT,\n    /*depends: */ _,\n    /*key: */ _,\n    /*split: */ function(el, opts) {\n        // detect and set options\n        var rows =  opts.rows = +(opts.rows || getData(el, 'rows') || 1);\n        var columns = opts.columns = +(opts.columns || getData(el, 'columns') || 1);\n\n        // Seek out the first <img> if the value is true \n        opts.image = opts.image || getData(el, 'image') || el.currentSrc || el.src;\n        if (opts.image) {\n            var img = $(\"img\", el)[0];\n            opts.image = img && (img.currentSrc || img.src);\n        }\n\n        // add optional image to background\n        if (opts.image) {\n            setProperty(el, \"background-image\", \"url(\" + opts.image + \")\");\n        }\n\n        var totalCells = rows * columns;\n        var elements = [];\n\n        var container = createElement(_, \"cell-grid\");\n        while (totalCells--) {\n            // Create a span\n            var cell = createElement(container, \"cell\");\n            createElement(cell, \"cell-inner\");\n            elements.push(cell);\n        }\n\n        // Append elements back into the parent\n        appendChild(el, container);\n\n        return elements;\n    }\n);\n\nvar cellRowPlugin = createPlugin(\n    /*by: */ \"cellRows\",\n    /*depends: */ [LAYOUT],\n    /*key: */ \"row\",\n    /*split: */ function(el, opts, ctx) {\n        var rowCount = opts.rows;\n        var result = Array2D(rowCount);\n\n        each(ctx[LAYOUT], function(cell, i, src) {\n            result[Math.floor(i / (src.length / rowCount))].push(cell);\n        });\n\n        return result;\n    }\n);\n\nvar cellColumnPlugin = createPlugin(\n    /*by: */ \"cellColumns\",\n    /*depends: */ [LAYOUT],\n    /*key: */ \"col\",\n    /*split: */ function(el, opts, ctx) {\n        var columnCount = opts.columns;\n        var result = Array2D(columnCount);\n\n        each(ctx[LAYOUT], function(cell, i) {\n            result[i % columnCount].push(cell);\n        });\n\n        return result;\n    }\n);\n\nvar cellPlugin = createPlugin(\n    /*by: */ \"cells\",\n    /*depends: */ ['cellRows', 'cellColumns'],\n    /*key: */ \"cell\", \n    /*split: */ function(el, opt, ctx) { \n        // re-index the layout as the cells\n        return ctx[LAYOUT];\n    }\n);\n\n// install plugins\n// word/char plugins\nadd(wordPlugin);\nadd(charPlugin);\nadd(linePlugin);\n// grid plugins\nadd(itemPlugin);\nadd(rowPlugin);\nadd(columnPlugin);\nadd(gridPlugin);\n// cell-layout plugins\nadd(layoutPlugin);\nadd(cellRowPlugin);\nadd(cellColumnPlugin);\nadd(cellPlugin);\n\nreturn Splitting;\n\n})));\n"]},"metadata":{},"sourceType":"script"}