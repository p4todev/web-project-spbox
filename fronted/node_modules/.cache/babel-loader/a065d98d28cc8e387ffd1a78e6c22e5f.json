{"ast":null,"code":"var _jsxFileName = \"/Users/patricio/Desktop/spbox-proyecto/fronted/src/Components/Carousel/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SliderContent from './SliderContent';\nimport data from './data';\nimport Arrows from './Arrows';\nimport './index.css';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Carousel = props => {\n  _s();\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [scrollNav, setScrollNav] = useState(false);\n\n  const changeNav = () => {\n    if (window.scrollY >= 80) {\n      setScrollNav(true);\n    } else {\n      setScrollNav(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', changeNav);\n  }, []);\n  const len = data.length - 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousels-container\",\n    children: [/*#__PURE__*/_jsxDEV(SliderContent, {\n      activeIndex: activeIndex,\n      imgSlider: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Arrows, {\n      prevSlide: () => {\n        setActiveIndex(activeIndex < 1 ? len : activeIndex - 1);\n      },\n      nextSlide: () => {\n        setActiveIndex(activeIndex === len ? 0 : activeIndex + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Carousel, \"sZqr9MGb2ZBHNcGvM6UI1VF3lqA=\");\n\n_c = Carousel;\nexport default Carousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"sources":["/Users/patricio/Desktop/spbox-proyecto/fronted/src/Components/Carousel/index.js"],"names":["React","useState","useEffect","SliderContent","data","Arrows","animateScroll","scroll","Carousel","props","activeIndex","setActiveIndex","scrollNav","setScrollNav","changeNav","window","scrollY","addEventListener","len","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,aAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAuC,cAAvC;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAiCV,QAAQ,CAAC,CAAD,CAA/C;AAEA,QAAM,CAACW,SAAD,EAAWC,YAAX,IAA2BZ,QAAQ,CAAC,KAAD,CAAzC;;AAEA,QAAMa,SAAS,GAAG,MAAM;AACpB,QAAGC,MAAM,CAACC,OAAP,IAAgB,EAAnB,EAAsB;AAClBH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAFD,MAEK;AACDA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAND;;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,SAAlC;AACH,GAFQ,EAEP,EAFO,CAAT;AAKA,QAAMI,GAAG,GAAGd,IAAI,CAACe,MAAL,GAAc,CAA1B;AAEA,sBACQ;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,WAAW,EAAET,WAA5B;AAAyC,MAAA,SAAS,EAAEN;AAApD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,MAAI;AAACO,QAAAA,cAAc,CAACD,WAAW,GAAG,CAAd,GAAkBQ,GAAlB,GAAwBR,WAAW,GAAG,CAAvC,CAAd;AAAwD,OAAhF;AACQ,MAAA,SAAS,EAAE,MAAI;AAACC,QAAAA,cAAc,CAACD,WAAW,KAAKQ,GAAhB,GAAsB,CAAtB,GAA0BR,WAAW,GAAG,CAAzC,CAAd;AAA0D;AADlF;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AASH,CA7BD;;GAAMF,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport SliderContent from './SliderContent'\nimport data from './data'\nimport Arrows from './Arrows';\nimport './index.css';\nimport { animateScroll as scroll} from 'react-scroll';\n\n\nconst Carousel = (props) => {\n    const [activeIndex, setActiveIndex ] = useState(0);\n\n    const [scrollNav,setScrollNav] = useState(false);\n\n    const changeNav = () => {\n        if(window.scrollY>=80){\n            setScrollNav(true);\n        }else{\n            setScrollNav(false);\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('scroll', changeNav);\n    },[]);\n\n\n    const len = data.length - 1;\n    \n    return (\n            <div className=\"carousels-container\">\n                <SliderContent activeIndex={activeIndex} imgSlider={data}/>\n                <Arrows prevSlide={()=>{setActiveIndex(activeIndex < 1 ? len : activeIndex - 1)} }\n                        nextSlide={()=>{setActiveIndex(activeIndex === len ? 0 : activeIndex + 1)}}\n                />\n            </div>\n        \n    )\n}\n\nexport default Carousel\n"]},"metadata":{},"sourceType":"module"}